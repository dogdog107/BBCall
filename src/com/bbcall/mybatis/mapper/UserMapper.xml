<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	这里namespace必须是UserMapper接口的全类名路径，
	不然运行的时候要报错 "is not known to the MapperRegistry" 
-->

<mapper namespace="com.bbcall.mybatis.dao.UserMapper">

    <!--mybatis ehcache缓存配置 -->
    <!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<resultMap id="UserResultMap" type="com.bbcall.mybatis.table.User" >
    	<id column="user_id" property="user_id" jdbcType="INTEGER" />
    	<result column="user_account" property="user_account" jdbcType="VARCHAR" />
    	<result column="user_password" property="user_password" jdbcType="VARCHAR" />
    	<result column="user_email" property="user_email" jdbcType="VARCHAR" />
    	<result column="user_mobile" property="user_mobile" jdbcType="BIGINT" />
    	<result column="user_type" property="user_type" jdbcType="INTEGER" />
    	<result column="user_name" property="user_name" jdbcType="VARCHAR" />
    	<result column="user_gender" property="user_gender" jdbcType="INTEGER" />
    	<result column="user_pic_url" property="user_pic_url" jdbcType="VARCHAR" />
    	<result column="user_language" property="user_language" jdbcType="VARCHAR" />
    	<result column="user_address_code" property="user_address_code" jdbcType="INTEGER" />
    	<result column="user_address" property="user_address" jdbcType="VARCHAR" />
    	<result column="user_skill" property="user_skill" jdbcType="VARCHAR" />
    	<result column="user_skill_name" property="user_skill_name" jdbcType="VARCHAR" />
    	<result column="user_description" property="user_description" jdbcType="VARCHAR" />
    	<result column="user_access_group" property="user_access_group" jdbcType="VARCHAR" />
    	<result column="user_grade" property="user_grade" jdbcType="DOUBLE" />
    	<result column="user_status" property="user_status" jdbcType="INTEGER" />
    	<result column="user_login_time" property="user_login_time" jdbcType="TIMESTAMP" />
    	<result column="user_create_time" property="user_create_time" jdbcType="TIMESTAMP" />
    	<result column="user_token" property="user_token" jdbcType="VARCHAR" />
    	<result column="user_driver" property="user_driver" jdbcType="INTEGER" />
    	<result column="user_push_token" property="user_push_token" jdbcType="VARCHAR" />
	</resultMap>

<!--     <resultMap type="Mail" id="result" extends="UserResultMap">  
        <collection property="attachments" javaType="ArrayList" column="id_mail" ofType="Attachment"   
        select="test.data.AttachmentMapper.selectByMailId"/>  
    </resultMap>   -->


	<insert id="addUserByAccount" parameterType="User"
		useGeneratedKeys="true" keyProperty="user_id">
		INSERT INTO USER (
		<trim suffix="" suffixOverrides=",">
			<if test="user_account != null">user_account,</if>
			<if test="user_password != null">user_password,</if>
			<if test="user_type != null">user_type,</if>
			<if test="user_status != null">user_status,</if>
			<if test="user_name != null">user_name,</if>
			<if test="user_pic_url != null">user_pic_url,</if>
			<if test="user_mobile != null">user_mobile,</if>
			<if test="user_gender != null">user_gender,</if>
			<if test="user_email != null">user_email,</if>
			<if test="user_language != null">user_language,</if>
			<if test="user_skill != null">user_skill,</if>
			<if test="user_skill_name != null">user_skill_name,</if>
			<if test="user_description != null">user_description,</if>
			<if test="user_access_group != null">user_access_group,</if>
			<if test="user_address != null">user_address,</if>
			<if test="user_address_code != null">user_address_code,</if>
			<if test="user_grade != null">user_grade,</if>
			<if test="user_driver != null">user_driver,</if>
			<if test="user_push_token != null">user_push_token,</if>
		</trim>
		)
		VALUES
		(
		<trim suffix="" suffixOverrides=",">
			<if test="user_account != null">#{user_account},</if>
			<if test="user_password != null">#{user_password},</if>
			<if test="user_type != null">#{user_type},</if>
			<if test="user_status != null">#{user_status},</if>
			<if test="user_name != null">#{user_name},</if>
			<if test="user_pic_url != null">#{user_pic_url},</if>
			<if test="user_mobile != null">#{user_mobile},</if>
			<if test="user_gender != null">#{user_gender},</if>
			<if test="user_email != null">#{user_email},</if>
			<if test="user_language != null">#{user_language},</if>
			<if test="user_skill != null">#{user_skill},</if>
			<if test="user_skill_name != null">#{user_skill_name},</if>
			<if test="user_description != null">#{user_description},</if>
			<if test="user_access_group != null">#{user_access_group},</if>
			<if test="user_address != null">#{user_address},</if>
			<if test="user_address_code != null">#{user_address_code},</if>
			<if test="user_grade != null">#{user_grade},</if>
			<if test="user_driver != null">#{user_driver},</if>
			<if test="user_push_token != null">#{user_push_token},</if>
		</trim>
		)
	</insert>

	<select id="getUserByAccount" parameterType="String" resultMap="UserResultMap">
		select user_id, user_account, user_password, user_email, user_mobile,
		user_type, user_name, user_gender, user_pic_url, user_language, user_address_code,
		user_address, user_skill, user_skill_name, user_description, user_access_group, user_grade,
		user_status, user_login_time, user_create_time, user_token, user_driver, user_push_token
		from USER
		where
		user_account=#{user_account}
	</select>
	<select id="getUserByEmail" parameterType="String" resultMap="UserResultMap">
		select user_id, user_account, user_password, user_email, user_mobile,
		user_type, user_name, user_gender, user_pic_url, user_language, user_address_code,
		user_address, user_skill, user_skill_name, user_description, user_access_group, user_grade,
		user_status, user_login_time, user_create_time, user_token, user_driver, user_push_token
		from USER
		where
		user_email=#{user_email}
	</select>
	<select id="getUserByMobile" parameterType="String" resultMap="UserResultMap">
		select user_id, user_account, user_password, user_email, user_mobile,
		user_type, user_name, user_gender, user_pic_url, user_language, user_address_code,
		user_address, user_skill, user_skill_name, user_description, user_access_group, user_grade,
		user_status, user_login_time, user_create_time, user_token, user_driver, user_push_token
		from USER
		where
		user_mobile=#{user_mobile}
	</select>

	<select id="getUserById" parameterType="int" resultMap="UserResultMap">
		select user_id, user_account, user_password, user_email, user_mobile,
		user_type, user_name, user_gender, user_pic_url, user_language, user_address_code,
		user_address, user_skill, user_skill_name, user_description, user_access_group, user_grade,
		user_status, user_login_time, user_create_time, user_token, user_driver, user_push_token
		from USER
		where
		user_id=#{user_id}
	</select>

	<select id="getUserByToken" parameterType="String" resultMap="UserResultMap">
		select user_id, user_account, user_password, user_email, user_mobile,
		user_type, user_name, user_gender, user_pic_url, user_language, user_address_code,
		user_address, user_skill, user_skill_name, user_description, user_access_group, user_grade,
		user_status, user_login_time, user_create_time, user_token, user_driver, user_push_token
		from USER
		where
		user_token=#{user_token}
	</select>
	
	<select id="findAll" resultMap="UserResultMap">
		select user_id, user_account, user_password, user_email, user_mobile,
		user_type, user_name, user_gender, user_pic_url, user_language, user_address_code,
		user_address, user_skill, user_skill_name, user_description, user_access_group, user_grade,
		user_status, user_login_time, user_create_time, user_token, user_driver, user_push_token
		from USER
	</select>
	
	<select id="listUserWhereOrderBy" resultMap="UserResultMap">
		select user_id, user_account, user_password, user_email, user_mobile,
		user_type, user_name, user_gender, user_pic_url, user_language, user_address_code,
		user_address, user_skill, user_skill_name, user_description, user_access_group, user_grade,
		user_status, user_login_time, user_create_time, user_token, user_driver, user_push_token
		from USER
		<where>
			<if test="where_col!=null and where_value!=null and where_col!='' and where_value!=''">  
            	${where_col}=#{where_value}
        	</if>  
		</where>
		<if test="order_col!=null and order_value!=null and order_col!='' and order_value!=''">  
            order by if(${order_col}=#{order_value},0,1),${order_col}
        </if>  
	</select>
	
	<select id="listUserOrderBy" resultMap="UserResultMap">
		select user_id, user_account, user_password, user_email, user_mobile,
		user_type, user_name, user_gender, user_pic_url, user_language, user_address_code,
		user_address, user_skill, user_skill_name, user_description, user_access_group, user_grade,
		user_status, user_login_time, user_create_time, user_token, user_driver, user_push_token
		from USER
		<where>
			<if test="col_name!=null and search_value!=null and col_name!='' and search_value!=''">  
            	${col_name}=#{search_value}
        	</if>  
		</where>
		<if test="col_name!=null and specify_value!=null and col_name!='' and specify_value!=''">  
            order by if(${col_name}=#{specify_value},0,1),${col_name}
        </if>  
		<if test="col_name!=null and col_name!='' and (specify_value==null or specify_value=='')">  
            order by ${col_name}
        </if>  
	</select>
	
	<update id="updateUser" parameterType="User">
		update USER set
		user_account=#{user_account}, user_password=#{user_password},
		user_email=#{user_email}, user_mobile=#{user_mobile},
		user_type=#{user_type}, user_name=#{user_name},
		user_gender=#{user_gender}, user_pic_url=#{user_pic_url},
		user_language=#{user_language},
		user_address_code=#{user_address_code},
		user_address=#{user_address},
		user_description=#{user_description},
		user_access_group=#{user_access_group},
		user_grade=#{user_grade},
		user_status=#{user_status},
		user_skill_name=#{user_skill_name},
		user_skill=#{user_skill}
		where user_id=#{user_id}
	</update>

	<update id="updateToken" parameterType="User">
		update USER set
		user_token=#{user_token}
		where user_id=#{user_id}
	</update>
	
	<update id="updatePushToken" parameterType="User">
		update USER set
		user_driver=#{user_driver},
		user_push_token=#{user_push_token}
		where user_id=#{user_id}
	</update>

	<update id="updateLoginTime" parameterType="User">
		update USER set
		user_login_time=#{user_login_time}
		where user_id=#{user_id}
	</update>
	
	<delete id="deleteUserById" parameterType="int">
		delete from USER where user_id=#{user_id}
	</delete>
<!-- 		
		select U.user_id user_id, user_account, user_password, user_email, user_mobile,
		user_type, user_name, user_gender, user_pic_url, user_language,
		user_address, group_concat(user_skill SEPARATOR ';') user_skill, user_description, user_access_group,
		user_status, user_login_time, user_token
		from USER U LEFT OUTER JOIN USERSKILL US ON U.user_id = US.user_id
		where
		user_account=#{user_account} 
-->

</mapper>    